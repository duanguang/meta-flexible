{"version":3,"file":"meta-flexible.cjs.js","sources":["../src/index.js"],"sourcesContent":["(function (window, document, apiMetaFlexibleOptions) {\n  /**\n   * 标记版本, 自动生成版本号\n   * @type {string}\n   */\n  apiMetaFlexibleOptions.version = '<@VERSION@>';\n\n  /**\n   * 计算文字大小比例差, 用于检查用户在手机浏览器中发大了字体导致响应式失效\n   */\n  const computeDiffFontSizeRatio = (() => {\n    let diffFontSizeRatio;\n    /**\n     * 当前实际字体大小, 用于检查用户在手机浏览器中发大了字体导致响应式失效\n     * @returns {number}\n     */\n    const computeActualFontSize = () => {\n      return +getComputedStyle(document.documentElement).getPropertyValue('font-size').replace(/px/, '');\n    };\n    return () => {\n      if (!diffFontSizeRatio) {\n        const rawDocElementCssText = document.documentElement.style.cssText;\n        document.documentElement.style.cssText = 'font-size:100px !important';\n        const docElementStyleFontSize = 100;\n        const actualFontSize = computeActualFontSize();\n        diffFontSizeRatio = actualFontSize / docElementStyleFontSize;\n        document.documentElement.style.cssText = rawDocElementCssText;\n      }\n      return diffFontSizeRatio;\n    };\n  })();\n\n  /**\n   * 方案枚举\n   */\n  const Plan = {\n    TargetDensityDpi: 0,\n    ScaleRatio: 1,\n    Rem: 2,\n    Viewpoint: 3\n  };\n\n  /**\n   * 是否有生效, 用于判断当前方案是否真正生效\n   */\n  const Impact = {\n    Yes: 1,\n    No: -1,\n    Unknown: 0\n  };\n\n  /**\n   * rem 调节大小依赖\n   * @type {{Auto: string, Height: string, Width: string}}\n   */\n  const RemResizeDependency = {\n    Width: 'width',\n    Height: 'height',\n    Auto: 'auto'\n  };\n\n  /**\n   * 默认options, 当前client属性为保留字段, 可接受 'pc' | 'mobile'\n   * @type {{enableBodyFontSize: boolean, enableViewpointFitForIphoneX: boolean, disableReportPlanNotWorkingErrorOnce: boolean, Plan: {ScaleRatio: number, Viewpoint: number, Rem: number, TargetDensityDpi: number}, designViewpoint: number, remUpperResizeLimit: number, plans: number[], namespace: string, fixRemManualSettingFontResize: boolean, client: undefined, getMetaViewpointScaleRatioContent(*, *=): string, isMobile: (function(): boolean), remRatio: number, getMetaViewpointTargetDensityDpiContent(*, *=): string}}\n   */\n  const defaultMetaFlexibleOptions = {\n    /**\n     * 日志命名空间\n     */\n    namespace: 'meta-flexible',\n    /**\n     * 根据设计稿大小设置即可\n     */\n    designViewpoint: 750,\n    /**\n     * meta viewpoint content, 细节请参考返回值\n     * @param designViewpoint\n     * @param enableViewpointFitForIphoneX\n     * @return {string}\n     */\n    getMetaViewpointTargetDensityDpiContent(designViewpoint, enableViewpointFitForIphoneX) {\n      return [\n        `width=${designViewpoint}`,\n        'target-densitydpi=device-dpi',\n        'user-scalable=no',\n        enableViewpointFitForIphoneX && 'viewport-fit=cover',\n      ].filter(Boolean).join(', ');\n    },\n    /**\n     * meta viewpoint content, 细节请参考返回值\n     * @param scale\n     * @param enableViewpointFitForIphoneX\n     * @return {string}\n     */\n    getMetaViewpointScaleRatioContent(scale, enableViewpointFitForIphoneX) {\n      return [\n        'width=device-width',\n        'initial-scale=1',\n        `maximum-scale=${scale}`,\n        `minimum-scale=${scale}`,\n        'user-scalable=no',\n        enableViewpointFitForIphoneX && 'viewport-fit=cover'\n      ].filter(Boolean).join(', ');\n    },\n    /**\n     * 判断是否是移动端\n     * @return {boolean}\n     */\n    isMobile: () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n    /**\n     * 降级方案顺序\n     */\n    plans: [Plan.TargetDensityDpi, Plan.ScaleRatio],\n    /**\n     * 方案枚举\n     */\n    Plan,\n    /**\n     * 是否设置body字体\n     */\n    enableBodyFontSize: false,\n    /**\n     * 是否开启viewpoint fit\n     */\n    enableViewpointFitForIphoneX: false,\n    /**\n     * rem 比例\n     */\n    remRatio: 10,\n    /**\n     * rem最大上限, 通过设置该字段防止页面无限放大\n     */\n    remUpperResizeLimit: 540,\n    /*\n     * rem 缩放基准依赖, 有效值为 width|height|auto\n     * 当缩放基准依赖为 width 时, 页面会根据宽度缩放而变化 html root 的 fontSize 大小\n     * 当缩放基准依赖为 height 时, 页面会根据高度缩放而变化 html root 的 fontSize 大小\n     * 当缩放基准依赖为 auto 时, 页面会根据宽高比决定, 并选择较小的值作为基准值\n     * 默认: width\n     */\n    remResizeDependency: RemResizeDependency.Width,\n    /**\n     * 标记当前客户端, 参考值 pc | mobile\n     */\n    client: undefined,\n    /**\n     * 禁止 ReportPlanNotWorkingErrorOnce\n     */\n    disableReportPlanNotWorkingErrorOnce: true,\n    /**\n     * 是否修复手动在(浏览器)中设置字体大小, 这会导致在 rem 方案中让响应式失效\n     */\n    fixRemManualSettingFontResize: true\n  };\n\n  /**\n   * 合并外部API Options\n   * @type {{namespace: string, designViewpoint: number, getMetaViewpointTargetDensityDpiContent, (*, *=): *, getMetaViewpointScaleRatioContent, (*, *=): *, isMobile: (function(): boolean), plans: *[], Plan: {TargetDensityDpi: number, ScaleRatio: number, Rem: number, Viewpoint: number}, enableBodyFontSize: boolean, enableViewpointFitForIphoneX: boolean, remRatio: number, remUpperResizeLimit: number, client: undefined}|*|{}}\n   */\n  const metaFlexibleOptions = {...defaultMetaFlexibleOptions, ...apiMetaFlexibleOptions};\n\n  /**\n   * 拉取 meta TargetDensityDpiContent 模板\n   */\n  const getMetaViewpointTargetDensityDpiContent = metaFlexibleOptions.getMetaViewpointTargetDensityDpiContent;\n\n  /**\n   * 拉取 meta ScaleRatio 模板\n   * @param scale\n   * @returns {string}\n   */\n  const getMetaViewpointScaleRatioContent = metaFlexibleOptions.getMetaViewpointScaleRatioContent;\n\n  /**\n   * 命名空间\n   * @type {string}\n   */\n  const NAMESPACE = metaFlexibleOptions.namespace;\n\n  /**\n   * 错误前缀\n   * @type {string}\n   */\n  const LOG_PREFIX = NAMESPACE;\n\n  /**\n   * 设计稿大小\n   * @type {number}\n   */\n  const designViewpoint = metaFlexibleOptions.designViewpoint;\n\n  /**\n   * 是否启用viewpoint fit, 该属性仅对iphone-x生效\n   * @type {boolean}\n   */\n  const enableViewpointFitForIphoneX = metaFlexibleOptions.enableViewpointFitForIphoneX;\n\n  /**\n   * 拉取 document 元素\n   * @type {Element}\n   */\n  const docEl = document.documentElement;\n\n  // noinspection JSUnresolvedVariable\n  /**\n   * 判断当前 window dpr 比例，若无直接降级使用 1\n   * @type {*|number}\n   */\n  const dpr = window.devicePixelRatio || 1;\n\n  /**\n   * plan 列表\n   */\n  const plans = metaFlexibleOptions.plans;\n\n  /**\n   * rem的基准值, 如 remRatio = 10, 即在750px设计稿中, 1rem = 75px\n   */\n  const remRatio = metaFlexibleOptions.remRatio;\n\n  /**\n   * rem 页面宽度变化最大上限, 当大于 remUpperResizeLimit, 根节点 font-size 将不再变化\n   */\n  const remUpperResizeLimit = metaFlexibleOptions.remUpperResizeLimit;\n  /**\n   * 禁止 ReportPlanNotWorkingErrorOnce\n   */\n  const disableReportPlanNotWorkingErrorOnce = metaFlexibleOptions.disableReportPlanNotWorkingErrorOnce;\n  /*\n   * rem 缩放基准依赖, 有效值为 width|height|auto\n   * 当缩放基准依赖为 width 时, 页面会根据宽度缩放而变化 html root 的 fontSize 大小\n   * 当缩放基准依赖为 height 时, 页面会根据高度缩放而变化 html root 的 fontSize 大小\n   * 当缩放基准依赖为 auto 时, 页面会根据宽高比决定, 并选择较小的值作为基准值\n   * 默认: width\n   */\n  const remResizeDependency = metaFlexibleOptions.remResizeDependency;\n  /**\n   * 是否修复手动在(浏览器)中设置字体大小, 这会导致在 rem 方案中让响应式失效\n   * @type {boolean}\n   */\n  const fixRemManualSettingFontResize = metaFlexibleOptions.fixRemManualSettingFontResize;\n  /**\n   * 条件判错函数\n   * @param condition 错误条件\n   * @param message\n   */\n  function invariant(condition, message) {\n    if (!condition) {\n      throw new Error(`${LOG_PREFIX}: ${message}`);\n    }\n  }\n\n  /**\n   * 条件警告函数\n   * @param condition 警告条件\n   * @param message 警告信息\n   */\n  function warn(condition, message) {\n    if (!condition) {\n      // eslint-disable-next-line no-console\n      console.warn(`${LOG_PREFIX}: ${message}`);\n    }\n  }\n\n  /**\n   * 判定页面中是否已经被手动设置 meta\n   */\n  function invariantMetaViewPoint() {\n    const metaViewPointElement = getMetaViewpointElement();\n    invariant(!metaViewPointElement, '在使用当前工具库时请勿使用自定义viewpoint meta. viewpoint meta 将会通过当前工具自动计算生成.');\n  }\n\n  /**\n   * 获取 meta viewpoint\n   */\n  function getMetaViewpointElement() {\n    return document.querySelector('meta[name=\"viewport\"]');\n  }\n\n  /**\n   * 设置 body 字体大小, 来自原本的 lib-flexible 源码, 作用暂未知\n   */\n  function setBodyFontSize() {\n    if (document.body) {\n      document.body.style.fontSize = (12 * dpr) + 'px';\n    } else {\n      document.addEventListener('DOMContentLoaded', setBodyFontSize);\n    }\n  }\n\n  /**\n   * 创建或更新 meta view point\n   * @param metaViewpoint {Element} - 如果传入的 metaViewpoint已经存在, 则直接更新即可\n   * @param content {String} - viewpoint 内容\n   * @returns {*}\n   */\n  function createOrUpdateMetaViewpoint(metaViewpoint, content) {\n    const isAppended = !!metaViewpoint;\n    if (isAppended) {\n      metaViewpoint.setAttribute('content', content);\n    } else {\n      const metaViewpointElement = getMetaViewpointElement();\n      if (!metaViewpointElement) {\n        metaViewpoint = document.createElement('meta');\n        metaViewpoint.setAttribute('name', 'viewport');\n      } else {\n        metaViewpoint = metaViewpointElement;\n      }\n      metaViewpoint.setAttribute('content', content);\n      const headElement = docEl.querySelector('head');\n      if (headElement) {\n        headElement.appendChild(metaViewpoint);\n      } else {\n        const wrap = document.createElement('div');\n        wrap.appendChild(metaViewpoint);\n        document.write(wrap.innerHTML);\n      }\n    }\n    return metaViewpoint;\n  }\n\n  /**\n   * 设置 targetDensityDpi meta\n   */\n  const setMetaViewpointTargetDensityDpi = (() => {\n    let isAppended = false;\n    let orientationChangeCounter = 0;\n    /**\n     * 处理在 ios iphone 6 (可能也涉及其他机型), 在翻转手机后当值 targetdensity 方案失效, window.innerWidth 异常, 不等于 designViewpoint\n     */\n    window.addEventListener('orientationchange', () => {\n      /**\n       * 且这个行为发生在翻转过程的某一个时间点, 所以需要等待若干时间, 目前测试等待setTimeout时间, 100 (无效), 150 (偶然), 200(可用), 250(较稳)\n       * 但不确定是否可能在性能低的时候翻转时间延长导致失效\n       */\n      setTimeout(() => {\n        if (window.innerWidth !== designViewpoint) {\n          orientationChangeCounter++;\n          if (orientationChangeCounter > 5) {\n            orientationChangeCounter = 0;\n          }\n          createOrUpdateMetaViewpoint(void 0, getMetaViewpointTargetDensityDpiContent(designViewpoint + orientationChangeCounter / 1000, enableViewpointFitForIphoneX));\n        }\n      }, 250);\n    });\n    return () => {\n      if (!isAppended) {\n        createOrUpdateMetaViewpoint(void 0, getMetaViewpointTargetDensityDpiContent(designViewpoint, enableViewpointFitForIphoneX));\n        isAppended = true;\n      }\n    };\n  })();\n\n  /**\n   * 设置 targetDensityDpi meta\n   */\n  const setMetaViewpointScaleRatio = (() => {\n    let metaViewpoint;\n    /**\n     * 缓存先前scale值\n     */\n    let prevScale;\n    return (scale) => {\n      if (prevScale !== scale) {\n        prevScale = scale;\n        metaViewpoint = createOrUpdateMetaViewpoint(metaViewpoint, getMetaViewpointScaleRatioContent(scale, enableViewpointFitForIphoneX));\n      }\n    };\n  })();\n\n  /**\n   * 上报错误, 异步抛异常, 用于上报\n   */\n  const reportPlanNotWorkingErrorOnce = (() => {\n    const hasReported = false;\n    return () => {\n      const errorMessage = `${NAMESPACE}所使用的所有方案失效, 暂用最后一种方案兜底`;\n      if (!disableReportPlanNotWorkingErrorOnce) {\n        if (!hasReported) {\n          setTimeout(() => invariant(false, errorMessage), 0);\n        }\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn(errorMessage);\n      }\n    };\n  })();\n\n  /**\n   * 应用响应式方案\n   */\n  const applyResponsePlan = (() => {\n    /**\n     * 客户端长度, 当判定长度一致时不进入该函数, 从而减少计算\n     */\n    let clientWidth;\n    /**\n     * 是否生效,默认情况下是No\n     */\n    let hasImpact = Impact.No;\n    /**\n     * 用于存储当前方案\n     */\n    let currentPlan;\n    return () => {\n      if (clientWidth !== docEl.clientWidth) {\n        clientWidth = docEl.clientWidth;\n        /**\n         * 如果已经发现当前方案已生效, 直接使用当前方案即可, 不再继续尝试后续方案\n         */\n        if (hasImpact === Impact.Yes) {\n          /**\n           * 第一个方案作为当前使用方案\n           */\n          implementPlan(currentPlan);\n          return;\n        }\n        if (plans.length === 0) {\n          implementPlan(currentPlan);\n          return;\n        }\n        while (hasImpact === Impact.No) {\n          if (plans[0] !== undefined) {\n            /**\n             * 指向当前方案\n             */\n            currentPlan = plans[0];\n          }\n          /**\n           * 如果所有方案失效, 直接抛异常, 用于上报, 但保留最后一种方案\n           */\n          if (plans.length <= 0) {\n            reportPlanNotWorkingErrorOnce();\n            break;\n          }\n          /**\n           * 是否有生效\n           */\n          hasImpact = hasPlanImpact(() => implementPlan(currentPlan));\n          /**\n           * 如果发现方案失效, 直接抛弃方案列表第一项\n           */\n          if (hasImpact === Impact.No) {\n            plans.shift();\n          }\n        }\n        /**\n         * 当是否生效是未知时, 如: 当前页面大小完全等于预设的值 (设计稿大小), 那么无法判断是否生效\n         * 当出现以上情况时, 重置 hasImpact = 无效, 让下一轮再次触发当前函数时在判定\n         */\n        hasImpact === Impact.Unknown && (hasImpact = Impact.No);\n      }\n    };\n  })();\n\n  /**\n   * 方案具体实现函数, 根据枚举选择方案\n   */\n  function implementPlan(currentPlan) {\n    switch (currentPlan) {\n      case Plan.TargetDensityDpi:\n        targetDensityDpiImpl();\n        break;\n      case Plan.ScaleRatio:\n        scaleRatioImpl();\n        break;\n      case Plan.Rem:\n        remImpl();\n        break;\n      case Plan.Viewpoint:\n        viewpointImpl();\n        break;\n      default:\n        invariant(false, `未知 meta-flexible 方案, plan = ${currentPlan}`);\n    }\n  }\n\n  /**\n   * rem 方案具体实现\n   */\n  function remImpl() {\n    setMetaViewpointScaleRatio(1);\n    refreshRem();\n  }\n\n  /**\n   * viewpoint 方案具体实现\n   */\n  function viewpointImpl() {\n    setMetaViewpointScaleRatio(1);\n    refreshRem(false);\n  }\n\n  /**\n   * 刷新Rem\n   * @param hasResizeLimit\n   */\n  function refreshRem(hasResizeLimit = true) {\n    let base;\n    if (remResizeDependency === RemResizeDependency.Width) {\n      base = docEl.clientWidth;\n    } else if (remResizeDependency === RemResizeDependency.Height) {\n      base = docEl.clientHeight;\n    } else if (remResizeDependency === RemResizeDependency.Auto) {\n      base =  Math.min(docEl.clientWidth, docEl.clientHeight);\n    }\n    if (hasResizeLimit) {\n      if (base > remUpperResizeLimit) {\n        base = remUpperResizeLimit;\n      }\n    }\n    let rem = base / remRatio;\n    if (fixRemManualSettingFontResize) {\n      rem = rem / computeDiffFontSizeRatio();\n    }\n    docEl.style.fontSize = `${rem}px`;\n    apiMetaFlexibleOptions.rem = rem;\n  }\n\n  /**\n   * target density dpi 具体实现\n   */\n  function targetDensityDpiImpl() {\n    setMetaViewpointTargetDensityDpi();\n  }\n\n  /**\n   * target density dpi 具体实现\n   */\n  function scaleRatioImpl() {\n    const width = getScreenWidth();\n    let scale = width / designViewpoint;\n    scale > 1 && (scale = 1);\n    setMetaViewpointScaleRatio(scale);\n  }\n\n  /**\n   * 检查发现支持0.5px\n   */\n  function tryAddHairLine() {\n    if (dpr >= 2) {\n      const fakeBody = document.createElement('body');\n      const testElement = document.createElement('div');\n      testElement.style.border = '.5px solid transparent';\n      fakeBody.appendChild(testElement);\n      docEl.appendChild(fakeBody);\n      if (testElement.offsetHeight === 1) {\n        docEl.classList.add('hairlines');\n      }\n      docEl.removeChild(fakeBody);\n    }\n  }\n\n  /**\n   * 方案是否有生效\n   * @param action\n   */\n  function hasPlanImpact(action) {\n    const clientWidthBeforeMeta = docEl.clientWidth;\n    action();\n    const clientWidthAfterMeta = docEl.clientWidth;\n    if (getScreenWidth() === designViewpoint) {\n      return Impact.Unknown;\n    }\n    return clientWidthAfterMeta === clientWidthBeforeMeta ? Impact.No : Impact.Yes;\n  }\n\n  /**\n   * 获取当前屏幕宽度\n   * @returns {Number}\n   */\n  function getScreenWidth() {\n    return window.screen.width;\n  }\n\n  (function () {\n\n    const {enableBodyFontSize, isMobile} = metaFlexibleOptions;\n\n    if (!isMobile()) {\n      warn(false, `请确保在移动端下使用${NAMESPACE}`);\n      return;\n    }\n\n    /**\n     * 校验判断 meta viewpoint, 禁止开发者手动添加\n     */\n    invariantMetaViewPoint();\n\n    if (enableBodyFontSize) {\n      /**\n       * 立即自执行, 设置 body font size\n       */\n      setBodyFontSize();\n    }\n    /**\n     * 直接触发页面\n     */\n    applyResponsePlan();\n\n    /**\n     * 在页面大小变更时触发更新\n     */\n    window.addEventListener('resize', (function () {\n      let timeoutId;\n      return () => {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(applyResponsePlan, 300);\n      };\n    }()));\n\n    /**\n     * onpageshow 事件类似于 onload 事件，onload 事件在页面第一次加载时触发，\n     * onpageshow 事件在每次加载页面时触发，即 onload 事件在页面从浏览器缓存中读取时不触发\n     */\n    window.addEventListener('pageshow', (e) => {\n      /** @namespace e.persisted */\n      e.persisted && applyResponsePlan();\n    }, false);\n\n    /**\n     * 尝试加入 Hairline 标记, 用于处理 border 1px的问题\n     */\n    tryAddHairLine();\n  }());\n}(window, document, window.__META_FLEXIBLE__ = window.__META_FLEXIBLE__ || {}));\n"],"names":["window","document","apiMetaFlexibleOptions","version","computeDiffFontSizeRatio","diffFontSizeRatio","computeActualFontSize","getComputedStyle","documentElement","getPropertyValue","replace","rawDocElementCssText","style","cssText","docElementStyleFontSize","actualFontSize","Plan","Impact","RemResizeDependency","defaultMetaFlexibleOptions","designViewpoint","enableViewpointFitForIphoneX","filter","Boolean","join","scale","test","navigator","userAgent","TargetDensityDpi","ScaleRatio","Width","undefined","metaFlexibleOptions","getMetaViewpointTargetDensityDpiContent","getMetaViewpointScaleRatioContent","NAMESPACE","namespace","LOG_PREFIX","docEl","dpr","devicePixelRatio","plans","remRatio","remUpperResizeLimit","disableReportPlanNotWorkingErrorOnce","remResizeDependency","fixRemManualSettingFontResize","invariant","condition","message","Error","warn","invariantMetaViewPoint","metaViewPointElement","getMetaViewpointElement","querySelector","setBodyFontSize","body","fontSize","addEventListener","createOrUpdateMetaViewpoint","metaViewpoint","content","isAppended","setAttribute","metaViewpointElement","createElement","headElement","appendChild","wrap","write","innerHTML","setMetaViewpointTargetDensityDpi","orientationChangeCounter","innerWidth","setMetaViewpointScaleRatio","prevScale","reportPlanNotWorkingErrorOnce","hasReported","errorMessage","applyResponsePlan","clientWidth","hasImpact","No","currentPlan","Yes","length","hasPlanImpact","implementPlan","shift","Unknown","Rem","Viewpoint","remImpl","viewpointImpl","refreshRem","hasResizeLimit","base","Height","clientHeight","Auto","Math","min","rem","targetDensityDpiImpl","scaleRatioImpl","width","getScreenWidth","tryAddHairLine","fakeBody","testElement","border","offsetHeight","classList","add","removeChild","action","clientWidthBeforeMeta","clientWidthAfterMeta","screen","enableBodyFontSize","isMobile","timeoutId","setTimeout","e","persisted","__META_FLEXIBLE__"],"mappings":"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"}